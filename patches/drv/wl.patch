Index: src/router/libutils/libwireless/wl.c
===================================================================
--- src/router/libutils/libwireless/wl.c	(revision 53464)
+++ src/router/libutils/libwireless/wl.c	(working copy)
@@ -144,7 +144,7 @@
 {
 #ifdef HAVE_RT2880
 	char *dev = getWifiDeviceName(prefix, NULL);
-	if (dev && !strcmp(dev, "MT7615 802.11ac"))
+	if (dev && !strcmp(dev, "MT7615E 802.11ac"))
 		return 1;
 #endif
 #if !defined(HAVE_MADWIFI) && !defined(HAVE_RT2880) && !defined(HAVE_RT61)
@@ -167,9 +167,9 @@
 
 int has_vht80plus80(const char *prefix)
 {
-//                      char *dev = getWifiDeviceName(prefix);
-//                      if (dev && !strcmp(dev, "MT7615 802.11ac"))
-//                          return 1;
+	char *dev = getWifiDeviceName(prefix, NULL);
+	if (dev && !strcmp(dev, "MT7615E 802.11ac"))
+		return 1;
 
 	return 0;
 }
@@ -431,38 +431,36 @@
 
 typedef union _MACHTTRANSMIT_SETTING {
 	struct {
-		unsigned short MCS:7;	// MCS
-		unsigned short BW:1;	//channel bandwidth 20MHz or 40 MHz
+		unsigned short MCS:6;
+		unsigned short ldpc:1;
+		unsigned short BW:2;
 		unsigned short ShortGI:1;
-		unsigned short STBC:2;	//SPACE
-		unsigned short rsv:3;
-		unsigned short MODE:2;	// Use definition MODE_xxx.
+		unsigned short STBC:1;
+		unsigned short eTxBF:1;
+		unsigned short iTxBF:1;
+		unsigned short MODE:3;
 	} field;
 	unsigned short word;
-} MACHTTRANSMIT_SETTING;
+} MACHTTRANSMIT_SETTING, *PMACHTTRANSMIT_SETTING;
 
 typedef struct _RT_802_11_MAC_ENTRY {
-	unsigned char ApIdx;
-	unsigned char Addr[6];
-	unsigned char Aid;
-	unsigned char Psm;	// 0:PWR_ACTIVE, 1:PWR_SAVE
-	unsigned char MimoPs;	// 0:MMPS_STATIC, 1:MMPS_DYNAMIC, 3:MMPS_Enabled
-	char AvgRssi0;
-	char AvgRssi1;
-	char AvgRssi2;
-	unsigned int ConnectedTime;
-	MACHTTRANSMIT_SETTING TxRate;
-//#ifdef RTMP_RBUS_SUPPORT
-	unsigned int LastRxRate;
-	int StreamSnr[3];
-	int SoundingRespSnr[3];
-//#endif // RTMP_RBUS_SUPPORT //
-} RT_802_11_MAC_ENTRY;
+	unsigned char	ApIdx;
+	unsigned char	Addr[ETHER_ADDR_LEN];
+	unsigned char	Aid;
+	unsigned char	Psm;     // 0:PWR_ACTIVE, 1:PWR_SAVE
+	unsigned char	MimoPs;  // 0:MMPS_STATIC, 1:MMPS_DYNAMIC, 3:MMPS_Enabled
+	char		AvgRssi0;
+	char		AvgRssi1;
+	char		AvgRssi2;
+	unsigned int	ConnectedTime;
+	MACHTTRANSMIT_SETTING	TxRate;
+	unsigned int	LastRxRate;
+} RT_802_11_MAC_ENTRY, *PRT_802_11_MAC_ENTRY;
 
 typedef struct _RT_802_11_MAC_TABLE {
 	unsigned long Num;
-	RT_802_11_MAC_ENTRY Entry[128];	//MAX_LEN_OF_MAC_TABLE = 32
-} RT_802_11_MAC_TABLE;
+	RT_802_11_MAC_ENTRY Entry[128];
+} RT_802_11_MAC_TABLE, *PRT_802_11_MAC_TABLE;
 
 int OidQueryInformation(unsigned long OidQueryCode, int socket_id, char *DeviceName, void *ptr, unsigned long PtrLength)
 {
@@ -499,7 +497,7 @@
 	    || nvram_nmatch("apstawet", "%s_mode", ifname)) {
 		ifn = "apcli0";
 		if (!strcmp(ifname, "wl1"))
-			ifn = "apcli1";
+			ifn = "apclix0";
 	}
 
 	int s;
@@ -3266,12 +3264,12 @@
 		}
 
 		if (!strncmp(prefix, "ba", 2) || !strncmp(prefix, "wl1", 3)) {
-			FILE *fp = fopen("/sys/bus/pci/devices/0000:02:00.0/device", "rb");
+			FILE *fp = fopen("/sys/bus/pci/devices/0000:01:00.0/device", "rb");
 			if (fp) {
 				fscanf(fp, "0x%x", &device);
 				fclose(fp);
 			}
-			fp = fopen("/sys/bus/pci/devices/0000:02:00.0/vendor", "rb");
+			fp = fopen("/sys/bus/pci/devices/0000:01:00.0/vendor", "rb");
 			if (fp) {
 				fscanf(fp, "0x%x", &vendor);
 				fclose(fp);
@@ -4693,7 +4691,7 @@
 				if (i == 0)
 					return "apcli0";
 				else
-					return "apcli1";
+					return "apclix0";
 			}
 		}
 
@@ -4719,7 +4717,7 @@
 			if (i == 0)
 				return "apcli0";
 			else
-				return "apcli1";
+				return "apclix0";
 
 	}
 	return NULL;
